// This file is part of Substrate.

// Copyright (C) 2022 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for proposals_codex
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-10-19, STEPS: `20`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./scripts/../target/release/joystream-node
// benchmark
// pallet
// --pallet=proposals_codex
// --extrinsic=*
// --chain=dev
// --steps=20
// --repeat=10
// --execution=wasm
// --template=./scripts/../devops/joystream-pallet-weight-template.hbs
// --output=./scripts/../runtime-modules/proposals/codex/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(unused_variables)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions needed for proposals_codex.
pub trait WeightInfo {
	fn create_proposal_signal(_i: u32, _t: u32, _d: u32, ) -> Weight;
	fn create_proposal_runtime_upgrade(_i: u32, _t: u32, _d: u32, ) -> Weight;
	fn create_proposal_funding_request(_i: u32, _t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_max_validator_count(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_veto_proposal(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_create_working_group_lead_opening(_i: u32, _t: u32, _d: u32, ) -> Weight;
	fn create_proposal_fill_working_group_lead_opening(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_update_working_group_budget(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_decrease_working_group_lead_stake(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_slash_working_group_lead(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_working_group_lead_reward(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_terminate_working_group_lead(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_amend_constitution(_i: u32, _t: u32, _d: u32, ) -> Weight;
	fn create_proposal_cancel_working_group_lead_opening(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_membership_price(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_council_budget_increment(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_councilor_reward(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_initial_invitation_balance(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_initial_invitation_count(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_membership_lead_invitation_quota(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_set_referral_cut(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_update_global_nft_limit(_t: u32, _d: u32, ) -> Weight;
	fn create_proposal_update_channel_payouts(_t: u32, _d: u32, _i: u32, ) -> Weight;
}

/// Weights for proposals_codex using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	fn create_proposal_signal(i: u32, t: u32, d: u32, ) -> Weight {
		(96_080_000 as Weight)
			// Standard Error: 9_000
			.saturating_add((1_489_000 as Weight).saturating_mul(i as Weight))
			// Standard Error: 54_000
			.saturating_add((722_000 as Weight).saturating_mul(t as Weight))
			// Standard Error: 54_000
			.saturating_add((998_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	fn create_proposal_runtime_upgrade(i: u32, t: u32, d: u32, ) -> Weight {
		(98_479_000 as Weight)
			// Standard Error: 9_000
			.saturating_add((1_438_000 as Weight).saturating_mul(i as Weight))
			// Standard Error: 54_000
			.saturating_add((846_000 as Weight).saturating_mul(t as Weight))
			// Standard Error: 54_000
			.saturating_add((1_019_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	fn create_proposal_funding_request(i: u32, t: u32, d: u32, ) -> Weight {
		(93_397_000 as Weight)
			// Standard Error: 22_000
			.saturating_add((62_000 as Weight).saturating_mul(i as Weight))
			// Standard Error: 22_000
			.saturating_add((1_109_000 as Weight).saturating_mul(t as Weight))
			// Standard Error: 22_000
			.saturating_add((1_163_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
	// Storage: Staking MinimumValidatorCount (r:1 w:0)
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	fn create_proposal_set_max_validator_count(t: u32, d: u32, ) -> Weight {
		(90_253_000 as Weight)
			// Standard Error: 21_000
			.saturating_add((1_151_000 as Weight).saturating_mul(t as Weight))
			// Standard Error: 21_000
			.saturating_add((1_187_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(8 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
	// Storage: ProposalEngine Proposals (r:1 w:1)
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	fn create_proposal_veto_proposal(t: u32, d: u32, ) -> Weight {
		(98_410_000 as Weight)
			// Standard Error: 21_000
			.saturating_add((987_000 as Weight).saturating_mul(t as Weight))
			// Standard Error: 21_000
			.saturating_add((1_147_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(8 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	fn create_proposal_create_working_group_lead_opening(i: u32, t: u32, d: u32, ) -> Weight {
		(113_645_000 as Weight)
			// Standard Error: 11_000
			.saturating_add((1_542_000 as Weight).saturating_mul(i as Weight))
			// Standard Error: 62_000
			.saturating_add((504_000 as Weight).saturating_mul(t as Weight))
			// Standard Error: 62_000
			.saturating_add((618_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
	// Storage: Instance1WorkingGroup OpeningById (r:1 w:0)
	// Storage: Instance1WorkingGroup ApplicationById (r:1 w:0)
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	fn create_proposal_fill_working_group_lead_opening(t: u32, d: u32, ) -> Weight {
		(97_759_000 as Weight)
			// Standard Error: 26_000
			.saturating_add((1_237_000 as Weight).saturating_mul(t as Weight))
			// Standard Error: 26_000
			.saturating_add((1_307_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(9 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	fn create_proposal_update_working_group_budget(t: u32, d: u32, ) -> Weight {
		(88_827_000 as Weight)
			// Standard Error: 20_000
			.saturating_add((1_068_000 as Weight).saturating_mul(t as Weight))
			// Standard Error: 20_000
			.saturating_add((1_204_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
	// Storage: Instance1WorkingGroup CurrentLead (r:1 w:0)
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	fn create_proposal_decrease_working_group_lead_stake(t: u32, d: u32, ) -> Weight {
		(94_298_000 as Weight)
			// Standard Error: 26_000
			.saturating_add((978_000 as Weight).saturating_mul(t as Weight))
			// Standard Error: 26_000
			.saturating_add((1_093_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(8 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
	// Storage: Instance1WorkingGroup CurrentLead (r:1 w:0)
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	fn create_proposal_slash_working_group_lead(t: u32, d: u32, ) -> Weight {
		(91_182_000 as Weight)
			// Standard Error: 32_000
			.saturating_add((995_000 as Weight).saturating_mul(t as Weight))
			// Standard Error: 32_000
			.saturating_add((1_308_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(8 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
	// Storage: Instance1WorkingGroup CurrentLead (r:1 w:0)
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	fn create_proposal_set_working_group_lead_reward(t: u32, d: u32, ) -> Weight {
		(88_430_000 as Weight)
			// Standard Error: 24_000
			.saturating_add((1_142_000 as Weight).saturating_mul(t as Weight))
			// Standard Error: 24_000
			.saturating_add((1_377_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(8 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
	// Storage: Instance1WorkingGroup CurrentLead (r:1 w:0)
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	fn create_proposal_terminate_working_group_lead(t: u32, d: u32, ) -> Weight {
		(92_553_000 as Weight)
			// Standard Error: 31_000
			.saturating_add((1_078_000 as Weight).saturating_mul(t as Weight))
			// Standard Error: 31_000
			.saturating_add((1_160_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(8 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	fn create_proposal_amend_constitution(i: u32, t: u32, d: u32, ) -> Weight {
		(112_251_000 as Weight)
			// Standard Error: 9_000
			.saturating_add((1_445_000 as Weight).saturating_mul(i as Weight))
			// Standard Error: 52_000
			.saturating_add((492_000 as Weight).saturating_mul(t as Weight))
			// Standard Error: 52_000
			.saturating_add((594_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
	// Storage: Instance1WorkingGroup OpeningById (r:1 w:0)
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	fn create_proposal_cancel_working_group_lead_opening(t: u32, d: u32, ) -> Weight {
		(93_275_000 as Weight)
			// Standard Error: 25_000
			.saturating_add((1_178_000 as Weight).saturating_mul(t as Weight))
			// Standard Error: 25_000
			.saturating_add((1_146_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(8 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	fn create_proposal_set_membership_price(t: u32, d: u32, ) -> Weight {
		(102_692_000 as Weight)
			// Standard Error: 175_000
			.saturating_add((379_000 as Weight).saturating_mul(t as Weight))
			// Standard Error: 175_000
			.saturating_add((1_092_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	fn create_proposal_set_council_budget_increment(t: u32, d: u32, ) -> Weight {
		(89_439_000 as Weight)
			// Standard Error: 20_000
			.saturating_add((1_029_000 as Weight).saturating_mul(t as Weight))
			// Standard Error: 20_000
			.saturating_add((1_180_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	fn create_proposal_set_councilor_reward(t: u32, d: u32, ) -> Weight {
		(89_092_000 as Weight)
			// Standard Error: 20_000
			.saturating_add((1_037_000 as Weight).saturating_mul(t as Weight))
			// Standard Error: 20_000
			.saturating_add((1_181_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	fn create_proposal_set_initial_invitation_balance(t: u32, d: u32, ) -> Weight {
		(87_599_000 as Weight)
			// Standard Error: 23_000
			.saturating_add((1_116_000 as Weight).saturating_mul(t as Weight))
			// Standard Error: 23_000
			.saturating_add((1_178_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	fn create_proposal_set_initial_invitation_count(t: u32, d: u32, ) -> Weight {
		(87_013_000 as Weight)
			// Standard Error: 20_000
			.saturating_add((1_029_000 as Weight).saturating_mul(t as Weight))
			// Standard Error: 20_000
			.saturating_add((1_264_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	fn create_proposal_set_membership_lead_invitation_quota(t: u32, d: u32, ) -> Weight {
		(89_311_000 as Weight)
			// Standard Error: 16_000
			.saturating_add((978_000 as Weight).saturating_mul(t as Weight))
			// Standard Error: 16_000
			.saturating_add((1_153_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	fn create_proposal_set_referral_cut(t: u32, d: u32, ) -> Weight {
		(87_903_000 as Weight)
			// Standard Error: 17_000
			.saturating_add((1_051_000 as Weight).saturating_mul(t as Weight))
			// Standard Error: 17_000
			.saturating_add((1_207_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	fn create_proposal_update_global_nft_limit(t: u32, d: u32, ) -> Weight {
		(90_916_000 as Weight)
			// Standard Error: 20_000
			.saturating_add((979_000 as Weight).saturating_mul(t as Weight))
			// Standard Error: 20_000
			.saturating_add((1_113_000 as Weight).saturating_mul(d as Weight))
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: ProposalEngine ActiveProposalCount (r:1 w:1)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: ProposalDiscussion ThreadCount (r:1 w:1)
	// Storage: ProposalEngine ProposalCount (r:1 w:1)
	// Storage: ProposalsCodex ThreadIdByProposalId (r:0 w:1)
	// Storage: ProposalDiscussion ThreadById (r:0 w:1)
	// Storage: ProposalEngine Proposals (r:0 w:1)
	// Storage: ProposalEngine DispatchableCallCode (r:0 w:1)
	fn create_proposal_update_channel_payouts(t: u32, d: u32, i: u32, ) -> Weight {
		(111_933_000 as Weight)
			// Standard Error: 50_000
			.saturating_add((459_000 as Weight).saturating_mul(t as Weight))
			// Standard Error: 50_000
			.saturating_add((921_000 as Weight).saturating_mul(d as Weight))
			// Standard Error: 9_000
			.saturating_add((1_347_000 as Weight).saturating_mul(i as Weight))
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
}

// Default implementation for tests
impl WeightInfo for () {
	fn create_proposal_signal(i: u32, t: u32, d: u32, ) -> Weight {
		0
	}
	fn create_proposal_runtime_upgrade(i: u32, t: u32, d: u32, ) -> Weight {
		0
	}
	fn create_proposal_funding_request(i: u32, t: u32, d: u32, ) -> Weight {
		0
	}
	fn create_proposal_set_max_validator_count(t: u32, d: u32, ) -> Weight {
		0
	}
	fn create_proposal_veto_proposal(t: u32, d: u32, ) -> Weight {
		0
	}
	fn create_proposal_create_working_group_lead_opening(i: u32, t: u32, d: u32, ) -> Weight {
		0
	}
	fn create_proposal_fill_working_group_lead_opening(t: u32, d: u32, ) -> Weight {
		0
	}
	fn create_proposal_update_working_group_budget(t: u32, d: u32, ) -> Weight {
		0
	}
	fn create_proposal_decrease_working_group_lead_stake(t: u32, d: u32, ) -> Weight {
		0
	}
	fn create_proposal_slash_working_group_lead(t: u32, d: u32, ) -> Weight {
		0
	}
	fn create_proposal_set_working_group_lead_reward(t: u32, d: u32, ) -> Weight {
		0
	}
	fn create_proposal_terminate_working_group_lead(t: u32, d: u32, ) -> Weight {
		0
	}
	fn create_proposal_amend_constitution(i: u32, t: u32, d: u32, ) -> Weight {
		0
	}
	fn create_proposal_cancel_working_group_lead_opening(t: u32, d: u32, ) -> Weight {
		0
	}
	fn create_proposal_set_membership_price(t: u32, d: u32, ) -> Weight {
		0
	}
	fn create_proposal_set_council_budget_increment(t: u32, d: u32, ) -> Weight {
		0
	}
	fn create_proposal_set_councilor_reward(t: u32, d: u32, ) -> Weight {
		0
	}
	fn create_proposal_set_initial_invitation_balance(t: u32, d: u32, ) -> Weight {
		0
	}
	fn create_proposal_set_initial_invitation_count(t: u32, d: u32, ) -> Weight {
		0
	}
	fn create_proposal_set_membership_lead_invitation_quota(t: u32, d: u32, ) -> Weight {
		0
	}
	fn create_proposal_set_referral_cut(t: u32, d: u32, ) -> Weight {
		0
	}
	fn create_proposal_update_global_nft_limit(t: u32, d: u32, ) -> Weight {
		0
	}
	fn create_proposal_update_channel_payouts(t: u32, d: u32, i: u32, ) -> Weight {
		0
	}
}
