// This file is part of Substrate.

// Copyright (C) 2022 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for bounty
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-09-13, STEPS: `10`, REPEAT: 5, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./scripts/../target/release/joystream-node
// benchmark
// pallet
// --pallet=bounty
// --extrinsic=*
// --chain=dev
// --steps=10
// --repeat=5
// --execution=wasm
// --template=./scripts/../devops/joystream-pallet-weight-template.hbs
// --output=.

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(unused_variables)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions needed for bounty.
pub trait WeightInfo {
	fn create_bounty_by_council(_i: u32, _j: u32, ) -> Weight;
	fn create_bounty_by_member(_i: u32, _j: u32, ) -> Weight;
	fn terminate_bounty_w_oracle_reward_funding_expired() -> Weight;
	fn terminate_bounty_wo_oracle_reward_funding_expired() -> Weight;
	fn terminate_bounty_w_oracle_reward_wo_funds_funding() -> Weight;
	fn terminate_bounty_wo_oracle_reward_wo_funds_funding() -> Weight;
	fn terminate_bounty_w_oracle_reward_w_funds_funding() -> Weight;
	fn terminate_bounty_wo_oracle_reward_w_funds_funding() -> Weight;
	fn terminate_bounty_work_or_judging_period() -> Weight;
	fn fund_bounty_by_member() -> Weight;
	fn fund_bounty_by_council() -> Weight;
	fn withdraw_funding_by_member() -> Weight;
	fn withdraw_funding_by_council() -> Weight;
	fn announce_work_entry(_i: u32, _j: u32, ) -> Weight;
	fn submit_work(_i: u32, ) -> Weight;
	fn submit_oracle_judgment_by_council(_j: u32, _k: u32, _w: u32, _r: u32, ) -> Weight;
	fn submit_oracle_judgment_by_member(_j: u32, _k: u32, _w: u32, _r: u32, ) -> Weight;
	fn switch_oracle_to_council_by_council_successful() -> Weight;
	fn switch_oracle_to_member_by_oracle_council() -> Weight;
	fn switch_oracle_to_member_by_council() -> Weight;
	fn switch_oracle_to_member_by_oracle_member() -> Weight;
	fn switch_oracle_to_council_by_oracle_member() -> Weight;
	fn end_working_period() -> Weight;
	fn withdraw_entrant_stake() -> Weight;
	fn withdraw_funding_state_bloat_bond_by_council() -> Weight;
	fn withdraw_funding_state_bloat_bond_by_member() -> Weight;
	fn withdraw_oracle_reward_by_oracle_council() -> Weight;
	fn withdraw_oracle_reward_by_oracle_member() -> Weight;
	fn entrant_remark(_i: u32, ) -> Weight;
	fn contributor_remark(_i: u32, ) -> Weight;
	fn oracle_remark(_i: u32, ) -> Weight;
	fn creator_remark(_i: u32, ) -> Weight;
}

/// Weights for bounty using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: Membership MembershipById (r:50 w:0)
	// Storage: Council Budget (r:1 w:1)
	// Storage: Bounty BountyCount (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: Bounty Bounties (r:0 w:1)
	fn create_bounty_by_council(i: u32, j: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 0
			.saturating_add((1_000 as Weight).saturating_mul(i as Weight))
			// Standard Error: 843_000
			.saturating_add((4_945_000 as Weight).saturating_mul(j as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(j as Weight)))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Membership MembershipById (r:51 w:0)
	// Storage: System Account (r:2 w:2)
	// Storage: Bounty BountyCount (r:1 w:1)
	// Storage: Bounty Bounties (r:0 w:1)
	fn create_bounty_by_member(i: u32, j: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 0
			.saturating_add((1_000 as Weight).saturating_mul(i as Weight))
			// Standard Error: 788_000
			.saturating_add((5_942_000 as Weight).saturating_mul(j as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(j as Weight)))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Bounty BountyContributions (r:1 w:0)
	// Storage: System Account (r:1 w:1)
	// Storage: Council Budget (r:1 w:1)
	fn terminate_bounty_w_oracle_reward_funding_expired() -> Weight {
		(61_618_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Bounty BountyContributions (r:1 w:0)
	// Storage: System Account (r:1 w:1)
	// Storage: Council Budget (r:1 w:1)
	fn terminate_bounty_wo_oracle_reward_funding_expired() -> Weight {
		(85_893_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Bounty BountyContributions (r:1 w:0)
	// Storage: System Account (r:1 w:1)
	// Storage: Council Budget (r:1 w:1)
	fn terminate_bounty_w_oracle_reward_wo_funds_funding() -> Weight {
		(60_566_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Bounty BountyContributions (r:1 w:0)
	// Storage: System Account (r:1 w:1)
	// Storage: Council Budget (r:1 w:1)
	fn terminate_bounty_wo_oracle_reward_wo_funds_funding() -> Weight {
		(83_382_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Bounty BountyContributions (r:2 w:0)
	fn terminate_bounty_w_oracle_reward_w_funds_funding() -> Weight {
		(36_786_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Bounty BountyContributions (r:2 w:0)
	fn terminate_bounty_wo_oracle_reward_w_funds_funding() -> Weight {
		(44_294_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Bounty BountyContributions (r:2 w:0)
	fn terminate_bounty_work_or_judging_period() -> Weight {
		(36_866_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Bounty BountyContributions (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	fn fund_bounty_by_member() -> Weight {
		(70_617_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Bounty BountyContributions (r:1 w:1)
	// Storage: Council Budget (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	fn fund_bounty_by_council() -> Weight {
		(59_868_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: Bounty Bounties (r:1 w:0)
	// Storage: Bounty BountyContributions (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	fn withdraw_funding_by_member() -> Weight {
		(69_166_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Bounty Bounties (r:1 w:0)
	// Storage: Bounty BountyContributions (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: Council Budget (r:1 w:1)
	fn withdraw_funding_by_council() -> Weight {
		(61_556_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Membership StakingAccountIdMemberStatus (r:1 w:0)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: Bounty EntryCount (r:1 w:1)
	// Storage: Bounty Entries (r:0 w:1)
	fn announce_work_entry(i: u32, _j: u32, ) -> Weight {
		(445_662_000 as Weight)
			// Standard Error: 0
			.saturating_add((1_000 as Weight).saturating_mul(i as Weight))
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(5 as Weight))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: Bounty Bounties (r:1 w:0)
	// Storage: Bounty Entries (r:1 w:1)
	fn submit_work(i: u32, ) -> Weight {
		(27_796_000 as Weight)
			// Standard Error: 0
			.saturating_add((1_000 as Weight).saturating_mul(i as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Bounty Entries (r:150 w:150)
	// Storage: Membership MembershipById (r:150 w:0)
	// Storage: System Account (r:151 w:151)
	// Storage: Council Budget (r:1 w:1)
	// Storage: Balances Locks (r:150 w:150)
	fn submit_oracle_judgment_by_council(j: u32, k: u32, w: u32, r: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 0
			.saturating_add((1_000 as Weight).saturating_mul(j as Weight))
			// Standard Error: 0
			.saturating_add((1_000 as Weight).saturating_mul(k as Weight))
			// Standard Error: 2_619_000
			.saturating_add((54_133_000 as Weight).saturating_mul(w as Weight))
			// Standard Error: 2_619_000
			.saturating_add((79_574_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().reads((4 as Weight).saturating_mul(w as Weight)))
			.saturating_add(T::DbWeight::get().reads((4 as Weight).saturating_mul(r as Weight)))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
			.saturating_add(T::DbWeight::get().writes((3 as Weight).saturating_mul(w as Weight)))
			.saturating_add(T::DbWeight::get().writes((3 as Weight).saturating_mul(r as Weight)))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Membership MembershipById (r:150 w:0)
	// Storage: Bounty Entries (r:149 w:149)
	// Storage: System Account (r:150 w:150)
	// Storage: Council Budget (r:1 w:1)
	// Storage: Balances Locks (r:149 w:149)
	fn submit_oracle_judgment_by_member(j: u32, k: u32, w: u32, r: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 0
			.saturating_add((1_000 as Weight).saturating_mul(j as Weight))
			// Standard Error: 0
			.saturating_add((1_000 as Weight).saturating_mul(k as Weight))
			// Standard Error: 3_498_000
			.saturating_add((64_950_000 as Weight).saturating_mul(w as Weight))
			// Standard Error: 3_558_000
			.saturating_add((71_895_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().reads((4 as Weight).saturating_mul(w as Weight)))
			.saturating_add(T::DbWeight::get().reads((4 as Weight).saturating_mul(r as Weight)))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
			.saturating_add(T::DbWeight::get().writes((3 as Weight).saturating_mul(w as Weight)))
			.saturating_add(T::DbWeight::get().writes((3 as Weight).saturating_mul(r as Weight)))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	fn switch_oracle_to_council_by_council_successful() -> Weight {
		(29_182_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Membership MembershipById (r:1 w:0)
	fn switch_oracle_to_member_by_oracle_council() -> Weight {
		(33_182_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Membership MembershipById (r:1 w:0)
	fn switch_oracle_to_member_by_council() -> Weight {
		(34_634_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Membership MembershipById (r:2 w:0)
	fn switch_oracle_to_member_by_oracle_member() -> Weight {
		(38_944_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Membership MembershipById (r:1 w:0)
	fn switch_oracle_to_council_by_oracle_member() -> Weight {
		(35_363_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Membership MembershipById (r:1 w:0)
	fn end_working_period() -> Weight {
		(34_069_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Bounty Entries (r:1 w:1)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	fn withdraw_entrant_stake() -> Weight {
		(57_741_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Bounty Bounties (r:1 w:0)
	// Storage: Bounty BountyContributions (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: Council Budget (r:1 w:1)
	fn withdraw_funding_state_bloat_bond_by_council() -> Weight {
		(60_806_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: Bounty Bounties (r:1 w:0)
	// Storage: Bounty BountyContributions (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	fn withdraw_funding_state_bloat_bond_by_member() -> Weight {
		(67_626_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: Council Budget (r:1 w:1)
	// Storage: Bounty BountyContributions (r:1 w:0)
	fn withdraw_oracle_reward_by_oracle_council() -> Weight {
		(87_514_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Bounty Bounties (r:1 w:1)
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: System Account (r:2 w:2)
	// Storage: Bounty BountyContributions (r:1 w:0)
	// Storage: Council Budget (r:1 w:1)
	fn withdraw_oracle_reward_by_oracle_member() -> Weight {
		(100_370_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: Bounty Entries (r:1 w:0)
	fn entrant_remark(i: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 0
			.saturating_add((1_000 as Weight).saturating_mul(i as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
	}
	// Storage: Membership MembershipById (r:1 w:0)
	// Storage: Bounty BountyContributions (r:1 w:0)
	fn contributor_remark(i: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 0
			.saturating_add((1_000 as Weight).saturating_mul(i as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
	}
	// Storage: Bounty Bounties (r:1 w:0)
	fn oracle_remark(i: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 0
			.saturating_add((1_000 as Weight).saturating_mul(i as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
	}
	// Storage: Bounty Bounties (r:1 w:0)
	fn creator_remark(i: u32, ) -> Weight {
		(0 as Weight)
			// Standard Error: 0
			.saturating_add((1_000 as Weight).saturating_mul(i as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
	}
}

// Default implementation for tests
impl WeightInfo for () {
	fn create_bounty_by_council(i: u32, j: u32, ) -> Weight {
		0
	}
	fn create_bounty_by_member(i: u32, j: u32, ) -> Weight {
		0
	}
	fn terminate_bounty_w_oracle_reward_funding_expired() -> Weight {
		0
	}
	fn terminate_bounty_wo_oracle_reward_funding_expired() -> Weight {
		0
	}
	fn terminate_bounty_w_oracle_reward_wo_funds_funding() -> Weight {
		0
	}
	fn terminate_bounty_wo_oracle_reward_wo_funds_funding() -> Weight {
		0
	}
	fn terminate_bounty_w_oracle_reward_w_funds_funding() -> Weight {
		0
	}
	fn terminate_bounty_wo_oracle_reward_w_funds_funding() -> Weight {
		0
	}
	fn terminate_bounty_work_or_judging_period() -> Weight {
		0
	}
	fn fund_bounty_by_member() -> Weight {
		0
	}
	fn fund_bounty_by_council() -> Weight {
		0
	}
	fn withdraw_funding_by_member() -> Weight {
		0
	}
	fn withdraw_funding_by_council() -> Weight {
		0
	}
	fn announce_work_entry(i: u32, _j: u32, ) -> Weight {
		0
	}
	fn submit_work(i: u32, ) -> Weight {
		0
	}
	fn submit_oracle_judgment_by_council(j: u32, k: u32, w: u32, r: u32, ) -> Weight {
		0
	}
	fn submit_oracle_judgment_by_member(j: u32, k: u32, w: u32, r: u32, ) -> Weight {
		0
	}
	fn switch_oracle_to_council_by_council_successful() -> Weight {
		0
	}
	fn switch_oracle_to_member_by_oracle_council() -> Weight {
		0
	}
	fn switch_oracle_to_member_by_council() -> Weight {
		0
	}
	fn switch_oracle_to_member_by_oracle_member() -> Weight {
		0
	}
	fn switch_oracle_to_council_by_oracle_member() -> Weight {
		0
	}
	fn end_working_period() -> Weight {
		0
	}
	fn withdraw_entrant_stake() -> Weight {
		0
	}
	fn withdraw_funding_state_bloat_bond_by_council() -> Weight {
		0
	}
	fn withdraw_funding_state_bloat_bond_by_member() -> Weight {
		0
	}
	fn withdraw_oracle_reward_by_oracle_council() -> Weight {
		0
	}
	fn withdraw_oracle_reward_by_oracle_member() -> Weight {
		0
	}
	fn entrant_remark(i: u32, ) -> Weight {
		0
	}
	fn contributor_remark(i: u32, ) -> Weight {
		0
	}
	fn oracle_remark(i: u32, ) -> Weight {
		0
	}
	fn creator_remark(i: u32, ) -> Weight {
		0
	}
}
