fragment AppliedOnOpeningEventFields on AppliedOnOpeningEvent {
  id
  event {
    ...EventFields
  }
  group {
    name
  }
  opening {
    id
    runtimeId
  }
  application {
    id
    runtimeId
  }
}

query getAppliedOnOpeningEventsByEventIds ($eventIds: [ID!]) {
  appliedOnOpeningEvents(where: { eventId_in: $eventIds }) {
    ...AppliedOnOpeningEventFields
  }
}

fragment OpeningAddedEventFields on OpeningAddedEvent {
  id
  event {
    ...EventFields
  }
  group {
    name
  }
  opening {
    id
    runtimeId
  }
}

query getOpeningAddedEventsByEventIds ($eventIds: [ID!]) {
  openingAddedEvents(where: { eventId_in: $eventIds }) {
    ...OpeningAddedEventFields
  }
}

fragment OpeningFilledEventFields on OpeningFilledEvent {
  id
  event {
    ...EventFields
  }
  group {
    name
  }
  opening {
    id
    runtimeId
  }
  workersHired {
    ...WorkerFields
    }
}

query getOpeningFilledEventsByEventIds ($eventIds: [ID!]) {
  openingFilledEvents(where: { eventId_in: $eventIds }) {
    ...OpeningFilledEventFields
  }
}

fragment ApplicationWithdrawnEventFields on ApplicationWithdrawnEvent {
  id
  event {
    ...EventFields
  }
  group {
    name
  }
  application {
    id
    runtimeId
  }
}

query getApplicationWithdrawnEventsByEventIds ($eventIds: [ID!]) {
  applicationWithdrawnEvents(where: { eventId_in: $eventIds }) {
    ...ApplicationWithdrawnEventFields
  }
}

fragment OpeningCanceledEventFields on OpeningCanceledEvent {
  id
  event {
    ...EventFields
  }
  group {
    name
  }
  opening {
    id
    runtimeId
  }
}

query getOpeningCancelledEventsByEventIds ($eventIds: [ID!]) {
  openingCanceledEvents(where: { eventId_in: $eventIds }) {
    ...OpeningCanceledEventFields
  }
}

fragment StatusTextChangedEventFields on  StatusTextChangedEvent {
  id
  event {
    ...EventFields
  }
  group {
    name
  }
  metadata
  result {
    __typename
    ... on UpcomingOpeningAdded {
      upcomingOpeningId
    }
    ... on UpcomingOpeningRemoved {
      upcomingOpeningId
    }
    ... on WorkingGroupMetadataSet {
      metadataId
    }
    ... on InvalidActionMetadata {
      reason
    }
  }
}

query getStatusTextChangedEventsByEventIds ($eventIds: [ID!]) {
  statusTextChangedEvents(where: { eventId_in: $eventIds }) {
    ...StatusTextChangedEventFields
  }
}
