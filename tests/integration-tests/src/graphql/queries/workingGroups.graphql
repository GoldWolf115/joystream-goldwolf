fragment ApplicationBasicFields on WorkingGroupApplication {
  id
  runtimeId
  status {
    __typename
    ... on ApplicationStatusCancelled {
      openingCancelledEventId
    }
    ... on ApplicationStatusWithdrawn {
      applicationWithdrawnEventId
    }
    ... on ApplicationStatusAccepted {
      openingFilledEventId
    }
    ... on ApplicationStatusRejected {
      openingFilledEventId
    }
  }
}

fragment OpeningStatusFields on WorkingGroupOpeningStatus {
  __typename
  ... on OpeningStatusFilled {
    openingFilledEventId
  }
  ... on OpeningStatusCancelled {
    openingCancelledEventId
  }
}

fragment ApplicationFormQuestionFields on ApplicationFormQuestion {
  question
  type
  index
}

fragment OpeningMetadataFields on WorkingGroupOpeningMetadata {
  shortDescription
  description
  hiringLimit
  expectedEnding
  applicationDetails
  applicationFormQuestions {
    ...ApplicationFormQuestionFields
  }
}

fragment WorkerFields on Worker {
  id
  runtimeId
  group {
    name
  }
  membership {
    id
  }
  roleAccount
  rewardAccount
  stakeAccount
  status {
    __typename
  }
  isLead
  stake
  payouts {
    id
  }
  hiredAtBlock {
    ...BlockFields
  }
  hiredAtTime
  application {
    ...ApplicationBasicFields
  }
  storage
}

fragment WorkingGroupMetadataFields on WorkingGroupMetadata {
  id
  status
  statusMessage
  about
  description
  setAtBlock {
    ...BlockFields
  }
  setInEvent {
    event {
      ...EventFields
    }
  }
}

fragment OpeningFields on WorkingGroupOpening {
  id
  runtimeId
  group {
    name
  }
  applications {
    ...ApplicationBasicFields
  }
  type
  status {
    ...OpeningStatusFields
  }
  metadata {
    ...OpeningMetadataFields
  }
  stakeAmount
  unstakingPeriod
  rewardPerBlock
  createdAtBlock {
    ...BlockFields
  }
  createdAt
}

query getOpeningById($openingId: ID!) {
  workingGroupOpeningByUniqueInput(where: { id: $openingId }) {
    ...OpeningFields
  }
}

query getOpeningsByIds($openingIds: [ID!]) {
  workingGroupOpenings(where: { id_in: $openingIds }) {
    ...OpeningFields
  }
}

fragment ApplicationFields on WorkingGroupApplication {
  ...ApplicationBasicFields
  createdAtBlock {
    ...BlockFields
  }
  createdAt
  opening {
    id
    runtimeId
  }
  applicant {
    id
  }
  roleAccount
  rewardAccount
  stakingAccount
  answers {
    question {
      question
    }
    answer
  }
  stake
}

query getApplicationById($applicationId: ID!) {
  workingGroupApplicationByUniqueInput(where: { id: $applicationId }) {
    ...ApplicationFields
  }
}

query getApplicationsByIds($applicationIds: [ID!]) {
  workingGroupApplications(where: { id_in: $applicationIds }) {
    ...ApplicationFields
  }
}

fragment WorkingGroupFields on WorkingGroup {
  id
  name
  metadata {
    ...WorkingGroupMetadataFields
  }
  leader {
    id
    runtimeId
  }
  budget
}

query getWorkingGroupByName($name: String!) {
  workingGroupByUniqueInput(where: { name: $name }) {
    ...WorkingGroupFields
  }
}

fragment UpcomingOpeningFields on UpcomingWorkingGroupOpening {
  id
  group {
    name
  }
  metadata {
    ...OpeningMetadataFields
  }
  expectedStart
  stakeAmount
  rewardPerBlock
  createdAtBlock {
    ...BlockFields
  }
  createdInEvent {
    id
  }
  createdAt
}

query getUpcomingOpeningById($id: ID!) {
  upcomingWorkingGroupOpeningByUniqueInput(where: { id: $id }) {
    ...UpcomingOpeningFields
  }
}

query getUpcomingOpeningsByCreatedInEventIds($createdInEventIds: [ID!]) {
  upcomingWorkingGroupOpenings(where: { createdInEventId_in: $createdInEventIds }) {
    ...UpcomingOpeningFields
  }
}

query getWorkingGroupMetadataSnapshotsByTimeAsc($groupId: ID!) {
  workingGroupMetadata(where: { groupId_eq: $groupId }, orderBy: createdAt_ASC) {
    ...WorkingGroupMetadataFields
  }
}

query getWorkersByRuntimeIds($workerIds: [Int!], $groupId: ID!) {
  workers(where: { runtimeId_in: $workerIds, groupId_eq: $groupId }) {
    ...WorkerFields
  }
}
