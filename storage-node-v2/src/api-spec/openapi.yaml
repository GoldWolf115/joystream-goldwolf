openapi: 3.0.3
info:
  title: Storage node API
  description: Storage node API
  contact:
    email: info@joystream.org
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 0.1.0
externalDocs:
  description: Storage node API
  url: https://github.com/Joystream/joystream/issues/2224
servers:
  - url: http://localhost:3333/api/v1/

tags:
  - name: public
    description: Public storage node API

paths:
  /upload:
    post:
      security:
        - UploadAuth: []
      description: Upload data
      operationId: publicApi.upload
      tags:
        - public
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - dataObjectId
                - storageBucketId
                - bagId
              properties:
                file:
                  description: Data file
                  type: string
                  format: binary
                dataObjectId:
                  description: Data object runtime ID
                  type: string
                  pattern: '^\d+$' #integer
                storageBucketId:
                  description: Storage bucket ID
                  type: string
                  pattern: '^\d+$' #integer
                bagId:
                  description: Bag ID
                  type: string
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        401:
          description: Unauthorized
        410:
          description: Upload request problem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /authToken:
    post:
      description: Get auth token from a server.
      operationId: publicApi.authToken
      tags:
        - public
      requestBody:
        description: Token request parameters,
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    UploadAuth:
      type: apiKey
      in: header
      name: x-api-key
  schemas:
    TokenRequest:
      type: object
      required:
        - dataObjectId
        - storageBucketId
        - bagId
      properties:
        dataObjectId:
          type: integer
          format: int64
        storageBucketId:
          type: integer
          format: int64
        bagId:
          type: string
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        type:
          type: string
        message:
          type: string
