name: Publish Colossus/Argus/Apps Docker images

on:
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Extract branch name
        id: extract_versions
        shell: bash
        run: |
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
          echo "colossus_version=$(cat storage-node/package.json | jq -r '.version')" >> $GITHUB_OUTPUT
          echo "argus_version=$(cat distributor-node/package.json | jq -r '.version')" >> $GITHUB_OUTPUT
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: apps
        id: build_apps
        uses: docker/build-push-action@v3
        with:
          file: apps.Dockerfile
          push: true
          tags: joystream/apps:${{ steps.extract_versions.outputs.branch }}
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      # storage and distributor node depend on schema generated by query-node
      # so we build query-node before we start docker builds
      - name: Build QueryNode
        run: |
          yarn --frozen-lockfile
          yarn workspace @joystream/types build
          yarn workspace @joystream/metadata-protobuf build
          yarn workspace @joystream/js build
          yarn workspace query-node-root build
      - name: storage-node
        id: build_colossus
        uses: docker/build-push-action@v3
        with:
          file: colossus.Dockerfile
          push: true
          tags: joystream/storage-node:${{ steps.extract_versions.outputs.colossus_version }}
      - name: distributor-node
        id: build_argus
        uses: docker/build-push-action@v3
        with:
          file: distributor-node.Dockerfile
          push: true
          tags: joystream/distributor-node:${{ steps.extract_versions.outputs.argus_version }}
