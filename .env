COMPOSE_PROJECT_NAME=joystream
PROJECT_NAME=query_node

# We will use a single postgres service with multiple databases
# The env variables below are by default used by all services and should be
# overriden in local env files
# DB config
INDEXER_DB_NAME=query_node_indexer
DB_NAME=query_node_processor
DB_USER=postgres
DB_PASS=postgres
DB_HOST=localhost
DB_PORT=5432
DEBUG=index-builder:*
TYPEORM_LOGGING=error

## Indexer options
# Block height to start indexing from.
# Note, that if there are already some indexed events, this setting is ignored
BLOCK_HEIGHT=0

# GraphQL ports (WARTHOG_APP_HOST overrides GRAPHQL_SERVER_PORT)
# So keep them the safe to avoid confusion, as long as each service is
# run in a separate container on same host then there is no issue.
# It does not make sense to have both but hydra codegen demands them.
GRAPHQL_SERVER_PORT=4001
GRAPHQL_SERVER_HOST=localhost
WARTHOG_APP_PORT=${GRAPHQL_SERVER_PORT}
WARTHOG_APP_HOST=localhost

# Websocket RPC endpoint containers will use.
JOYSTREAM_NODE_WS=ws://joystream-node:9944/

# Query node which colossus will use
# TODO: Colossus should take a full Url instead
COLOSSUS_QUERY_NODE_HOST=graphql-server:${GRAPHQL_SERVER_PORT}

# Query node which distributor will use
DISTRIBUTOR_QUERY_NODE_URL=http://graphql-server:${GRAPHQL_SERVER_PORT}/graphql

# Indexer gateway used by processor. If you don't use the local indexer set this to a remote gateway
PROCESSOR_INDEXER_GATEWAY=http://hydra-indexer-gateway:${GRAPHQL_SERVER_PORT}/graphql

# Colossus services identities
COLOSSUS_1_WORKER_ID=0
COLOSSUS_1_ACCOUNT_URI=//testing//worker//Storage//${COLOSSUS_1_WORKER_ID}
COLOSSUS_2_WORKER_ID=1
COLOSSUS_2_ACCOUNT_URI=//testing//worker//Storage//${COLOSSUS_2_WORKER_ID}

# Distributor node services identities
DISTRIBUTOR_1_WORKER_ID=0
DISTRIBUTOR_1_ACCOUNT_URI=//testing//worker//Distribution//${DISTRIBUTOR_1_WORKER_ID}
DISTRIBUTOR_2_WORKER_ID=1
DISTRIBUTOR_2_ACCOUNT_URI=//testing//worker//Distribution//${DISTRIBUTOR_2_WORKER_ID}
