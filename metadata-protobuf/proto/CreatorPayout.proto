syntax = "proto2";

message CreatorPayoutPayload {
  message Header {
    // Length in bytes of entire payload
    required fixed64 payload_length_in_bytes = 1;

    // Length in bytes of payload header
    required fixed64 header_length_in_bytes = 2; 

    // Number of channels
    required fixed32 number_of_channels = 3; 

    message CreatorPayoutByteOffset {
      // Channel id; `c_i`
      required fixed32 channel_id = 1; 
    
      // Byte offset from start of payload where payout record for channel `c_i` exists
      required fixed64 byte_offset = 2; 
    }

    // List of byte offsets for all channels
    repeated CreatorPayoutByteOffset creator_payout_byte_offsets = 4; 
  }

  // Creator payout full body structure, it will not be downloaded by clients in full
  message Body {
    message CreatorPayout {
      required uint32 channel_id = 1; // `c_i`
    
      required float cumulative_payout_owed = 2; // `p_i`
    
      enum Side {
        Left = 0;
        Right = 1;
      }
    
      message ProofElement {
        required bytes merkle_branch = 1;
        required Side side = 2;
      }
    
      repeated ProofElement merkle_branches = 3; 
    
      // `d_i`; rationale for for reward or deduction for `c_i`;
      required string payout_rationale = 4; 
    }
    
    // List of creator payouts
    repeated CreatorPayout creator_payouts = 1; 
  }

  required Header header = 1; // Payload header
  required Body body = 2; // Payload body
}