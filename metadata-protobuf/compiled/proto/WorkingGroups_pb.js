// source: proto/WorkingGroups.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.AddUpcomingOpening', null, global);
goog.exportSymbol('proto.ApplicationMetadata', null, global);
goog.exportSymbol('proto.OpeningMetadata', null, global);
goog.exportSymbol('proto.OpeningMetadata.ApplicationFormQuestion', null, global);
goog.exportSymbol('proto.OpeningMetadata.ApplicationFormQuestion.InputType', null, global);
goog.exportSymbol('proto.RemoveUpcomingOpening', null, global);
goog.exportSymbol('proto.SetGroupMetadata', null, global);
goog.exportSymbol('proto.UpcomingOpeningMetadata', null, global);
goog.exportSymbol('proto.WorkingGroupMetadataAction', null, global);
goog.exportSymbol('proto.WorkingGroupMetadataAction.ActionCase', null, global);
goog.exportSymbol('proto.WorkingGroupStatusMetadata', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.OpeningMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.OpeningMetadata.repeatedFields_, null);
};
goog.inherits(proto.OpeningMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.OpeningMetadata.displayName = 'proto.OpeningMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.OpeningMetadata.ApplicationFormQuestion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.OpeningMetadata.ApplicationFormQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.OpeningMetadata.ApplicationFormQuestion.displayName = 'proto.OpeningMetadata.ApplicationFormQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.UpcomingOpeningMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.UpcomingOpeningMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.UpcomingOpeningMetadata.displayName = 'proto.UpcomingOpeningMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ApplicationMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ApplicationMetadata.repeatedFields_, null);
};
goog.inherits(proto.ApplicationMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ApplicationMetadata.displayName = 'proto.ApplicationMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.WorkingGroupStatusMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.WorkingGroupStatusMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.WorkingGroupStatusMetadata.displayName = 'proto.WorkingGroupStatusMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SetGroupMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SetGroupMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SetGroupMetadata.displayName = 'proto.SetGroupMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.AddUpcomingOpening = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.AddUpcomingOpening, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.AddUpcomingOpening.displayName = 'proto.AddUpcomingOpening';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RemoveUpcomingOpening = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RemoveUpcomingOpening, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.RemoveUpcomingOpening.displayName = 'proto.RemoveUpcomingOpening';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.WorkingGroupMetadataAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.WorkingGroupMetadataAction.oneofGroups_);
};
goog.inherits(proto.WorkingGroupMetadataAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.WorkingGroupMetadataAction.displayName = 'proto.WorkingGroupMetadataAction';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.OpeningMetadata.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.OpeningMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.OpeningMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.OpeningMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OpeningMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    shortDescription: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    description: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    hiringLimit: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    expectedEndingTimestamp: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    applicationDetails: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    applicationFormQuestionsList: jspb.Message.toObjectList(msg.getApplicationFormQuestionsList(),
    proto.OpeningMetadata.ApplicationFormQuestion.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.OpeningMetadata}
 */
proto.OpeningMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.OpeningMetadata;
  return proto.OpeningMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.OpeningMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.OpeningMetadata}
 */
proto.OpeningMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortDescription(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHiringLimit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpectedEndingTimestamp(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplicationDetails(value);
      break;
    case 6:
      var value = new proto.OpeningMetadata.ApplicationFormQuestion;
      reader.readMessage(value,proto.OpeningMetadata.ApplicationFormQuestion.deserializeBinaryFromReader);
      msg.addApplicationFormQuestions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.OpeningMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.OpeningMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.OpeningMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OpeningMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getApplicationFormQuestionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.OpeningMetadata.ApplicationFormQuestion.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.OpeningMetadata.ApplicationFormQuestion.prototype.toObject = function(opt_includeInstance) {
  return proto.OpeningMetadata.ApplicationFormQuestion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.OpeningMetadata.ApplicationFormQuestion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OpeningMetadata.ApplicationFormQuestion.toObject = function(includeInstance, msg) {
  var f, obj = {
    question: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    type: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.OpeningMetadata.ApplicationFormQuestion}
 */
proto.OpeningMetadata.ApplicationFormQuestion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.OpeningMetadata.ApplicationFormQuestion;
  return proto.OpeningMetadata.ApplicationFormQuestion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.OpeningMetadata.ApplicationFormQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.OpeningMetadata.ApplicationFormQuestion}
 */
proto.OpeningMetadata.ApplicationFormQuestion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 2:
      var value = /** @type {!proto.OpeningMetadata.ApplicationFormQuestion.InputType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.OpeningMetadata.ApplicationFormQuestion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.OpeningMetadata.ApplicationFormQuestion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.OpeningMetadata.ApplicationFormQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.OpeningMetadata.ApplicationFormQuestion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!proto.OpeningMetadata.ApplicationFormQuestion.InputType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.OpeningMetadata.ApplicationFormQuestion.InputType = {
  TEXT: 1,
  TEXTAREA: 2
};

/**
 * required string question = 1;
 * @return {string}
 */
proto.OpeningMetadata.ApplicationFormQuestion.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.OpeningMetadata.ApplicationFormQuestion} returns this
 */
proto.OpeningMetadata.ApplicationFormQuestion.prototype.setQuestion = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OpeningMetadata.ApplicationFormQuestion} returns this
 */
proto.OpeningMetadata.ApplicationFormQuestion.prototype.clearQuestion = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OpeningMetadata.ApplicationFormQuestion.prototype.hasQuestion = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required InputType type = 2;
 * @return {!proto.OpeningMetadata.ApplicationFormQuestion.InputType}
 */
proto.OpeningMetadata.ApplicationFormQuestion.prototype.getType = function() {
  return /** @type {!proto.OpeningMetadata.ApplicationFormQuestion.InputType} */ (jspb.Message.getFieldWithDefault(this, 2, 1));
};


/**
 * @param {!proto.OpeningMetadata.ApplicationFormQuestion.InputType} value
 * @return {!proto.OpeningMetadata.ApplicationFormQuestion} returns this
 */
proto.OpeningMetadata.ApplicationFormQuestion.prototype.setType = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OpeningMetadata.ApplicationFormQuestion} returns this
 */
proto.OpeningMetadata.ApplicationFormQuestion.prototype.clearType = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OpeningMetadata.ApplicationFormQuestion.prototype.hasType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required string short_description = 1;
 * @return {string}
 */
proto.OpeningMetadata.prototype.getShortDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.OpeningMetadata} returns this
 */
proto.OpeningMetadata.prototype.setShortDescription = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OpeningMetadata} returns this
 */
proto.OpeningMetadata.prototype.clearShortDescription = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OpeningMetadata.prototype.hasShortDescription = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required string description = 2;
 * @return {string}
 */
proto.OpeningMetadata.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.OpeningMetadata} returns this
 */
proto.OpeningMetadata.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OpeningMetadata} returns this
 */
proto.OpeningMetadata.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OpeningMetadata.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 hiring_limit = 3;
 * @return {number}
 */
proto.OpeningMetadata.prototype.getHiringLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.OpeningMetadata} returns this
 */
proto.OpeningMetadata.prototype.setHiringLimit = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OpeningMetadata} returns this
 */
proto.OpeningMetadata.prototype.clearHiringLimit = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OpeningMetadata.prototype.hasHiringLimit = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 expected_ending_timestamp = 4;
 * @return {number}
 */
proto.OpeningMetadata.prototype.getExpectedEndingTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.OpeningMetadata} returns this
 */
proto.OpeningMetadata.prototype.setExpectedEndingTimestamp = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OpeningMetadata} returns this
 */
proto.OpeningMetadata.prototype.clearExpectedEndingTimestamp = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OpeningMetadata.prototype.hasExpectedEndingTimestamp = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * required string application_details = 5;
 * @return {string}
 */
proto.OpeningMetadata.prototype.getApplicationDetails = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.OpeningMetadata} returns this
 */
proto.OpeningMetadata.prototype.setApplicationDetails = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.OpeningMetadata} returns this
 */
proto.OpeningMetadata.prototype.clearApplicationDetails = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.OpeningMetadata.prototype.hasApplicationDetails = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated ApplicationFormQuestion application_form_questions = 6;
 * @return {!Array<!proto.OpeningMetadata.ApplicationFormQuestion>}
 */
proto.OpeningMetadata.prototype.getApplicationFormQuestionsList = function() {
  return /** @type{!Array<!proto.OpeningMetadata.ApplicationFormQuestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.OpeningMetadata.ApplicationFormQuestion, 6));
};


/**
 * @param {!Array<!proto.OpeningMetadata.ApplicationFormQuestion>} value
 * @return {!proto.OpeningMetadata} returns this
*/
proto.OpeningMetadata.prototype.setApplicationFormQuestionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.OpeningMetadata.ApplicationFormQuestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.OpeningMetadata.ApplicationFormQuestion}
 */
proto.OpeningMetadata.prototype.addApplicationFormQuestions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.OpeningMetadata.ApplicationFormQuestion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.OpeningMetadata} returns this
 */
proto.OpeningMetadata.prototype.clearApplicationFormQuestionsList = function() {
  return this.setApplicationFormQuestionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.UpcomingOpeningMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.UpcomingOpeningMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.UpcomingOpeningMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UpcomingOpeningMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    expectedStart: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    rewardPerBlock: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    minApplicationStake: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    metadata: (f = msg.getMetadata()) && proto.OpeningMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.UpcomingOpeningMetadata}
 */
proto.UpcomingOpeningMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.UpcomingOpeningMetadata;
  return proto.UpcomingOpeningMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.UpcomingOpeningMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.UpcomingOpeningMetadata}
 */
proto.UpcomingOpeningMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpectedStart(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRewardPerBlock(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMinApplicationStake(value);
      break;
    case 4:
      var value = new proto.OpeningMetadata;
      reader.readMessage(value,proto.OpeningMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.UpcomingOpeningMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.UpcomingOpeningMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.UpcomingOpeningMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UpcomingOpeningMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.OpeningMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * required uint64 expected_start = 1;
 * @return {number}
 */
proto.UpcomingOpeningMetadata.prototype.getExpectedStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.UpcomingOpeningMetadata} returns this
 */
proto.UpcomingOpeningMetadata.prototype.setExpectedStart = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UpcomingOpeningMetadata} returns this
 */
proto.UpcomingOpeningMetadata.prototype.clearExpectedStart = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UpcomingOpeningMetadata.prototype.hasExpectedStart = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required uint64 reward_per_block = 2;
 * @return {number}
 */
proto.UpcomingOpeningMetadata.prototype.getRewardPerBlock = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.UpcomingOpeningMetadata} returns this
 */
proto.UpcomingOpeningMetadata.prototype.setRewardPerBlock = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UpcomingOpeningMetadata} returns this
 */
proto.UpcomingOpeningMetadata.prototype.clearRewardPerBlock = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UpcomingOpeningMetadata.prototype.hasRewardPerBlock = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required uint64 min_application_stake = 3;
 * @return {number}
 */
proto.UpcomingOpeningMetadata.prototype.getMinApplicationStake = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.UpcomingOpeningMetadata} returns this
 */
proto.UpcomingOpeningMetadata.prototype.setMinApplicationStake = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UpcomingOpeningMetadata} returns this
 */
proto.UpcomingOpeningMetadata.prototype.clearMinApplicationStake = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UpcomingOpeningMetadata.prototype.hasMinApplicationStake = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required OpeningMetadata metadata = 4;
 * @return {!proto.OpeningMetadata}
 */
proto.UpcomingOpeningMetadata.prototype.getMetadata = function() {
  return /** @type{!proto.OpeningMetadata} */ (
    jspb.Message.getWrapperField(this, proto.OpeningMetadata, 4, 1));
};


/**
 * @param {!proto.OpeningMetadata} value
 * @return {!proto.UpcomingOpeningMetadata} returns this
*/
proto.UpcomingOpeningMetadata.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.UpcomingOpeningMetadata} returns this
 */
proto.UpcomingOpeningMetadata.prototype.clearMetadata = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.UpcomingOpeningMetadata.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ApplicationMetadata.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ApplicationMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.ApplicationMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ApplicationMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ApplicationMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    answersList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ApplicationMetadata}
 */
proto.ApplicationMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ApplicationMetadata;
  return proto.ApplicationMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ApplicationMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ApplicationMetadata}
 */
proto.ApplicationMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addAnswers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ApplicationMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ApplicationMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ApplicationMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ApplicationMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnswersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string answers = 1;
 * @return {!Array<string>}
 */
proto.ApplicationMetadata.prototype.getAnswersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ApplicationMetadata} returns this
 */
proto.ApplicationMetadata.prototype.setAnswersList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ApplicationMetadata} returns this
 */
proto.ApplicationMetadata.prototype.addAnswers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ApplicationMetadata} returns this
 */
proto.ApplicationMetadata.prototype.clearAnswersList = function() {
  return this.setAnswersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.WorkingGroupStatusMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.WorkingGroupStatusMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.WorkingGroupStatusMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.WorkingGroupStatusMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    about: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    status: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    statusMessage: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.WorkingGroupStatusMetadata}
 */
proto.WorkingGroupStatusMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.WorkingGroupStatusMetadata;
  return proto.WorkingGroupStatusMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.WorkingGroupStatusMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.WorkingGroupStatusMetadata}
 */
proto.WorkingGroupStatusMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAbout(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatusMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.WorkingGroupStatusMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.WorkingGroupStatusMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.WorkingGroupStatusMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.WorkingGroupStatusMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string description = 1;
 * @return {string}
 */
proto.WorkingGroupStatusMetadata.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.WorkingGroupStatusMetadata} returns this
 */
proto.WorkingGroupStatusMetadata.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.WorkingGroupStatusMetadata} returns this
 */
proto.WorkingGroupStatusMetadata.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.WorkingGroupStatusMetadata.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string about = 2;
 * @return {string}
 */
proto.WorkingGroupStatusMetadata.prototype.getAbout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.WorkingGroupStatusMetadata} returns this
 */
proto.WorkingGroupStatusMetadata.prototype.setAbout = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.WorkingGroupStatusMetadata} returns this
 */
proto.WorkingGroupStatusMetadata.prototype.clearAbout = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.WorkingGroupStatusMetadata.prototype.hasAbout = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string status = 3;
 * @return {string}
 */
proto.WorkingGroupStatusMetadata.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.WorkingGroupStatusMetadata} returns this
 */
proto.WorkingGroupStatusMetadata.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.WorkingGroupStatusMetadata} returns this
 */
proto.WorkingGroupStatusMetadata.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.WorkingGroupStatusMetadata.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string status_message = 4;
 * @return {string}
 */
proto.WorkingGroupStatusMetadata.prototype.getStatusMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.WorkingGroupStatusMetadata} returns this
 */
proto.WorkingGroupStatusMetadata.prototype.setStatusMessage = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.WorkingGroupStatusMetadata} returns this
 */
proto.WorkingGroupStatusMetadata.prototype.clearStatusMessage = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.WorkingGroupStatusMetadata.prototype.hasStatusMessage = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SetGroupMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.SetGroupMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SetGroupMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SetGroupMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    newmetadata: (f = msg.getNewmetadata()) && proto.WorkingGroupStatusMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SetGroupMetadata}
 */
proto.SetGroupMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SetGroupMetadata;
  return proto.SetGroupMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SetGroupMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SetGroupMetadata}
 */
proto.SetGroupMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.WorkingGroupStatusMetadata;
      reader.readMessage(value,proto.WorkingGroupStatusMetadata.deserializeBinaryFromReader);
      msg.setNewmetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SetGroupMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SetGroupMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SetGroupMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SetGroupMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNewmetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.WorkingGroupStatusMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * required WorkingGroupStatusMetadata newMetadata = 1;
 * @return {!proto.WorkingGroupStatusMetadata}
 */
proto.SetGroupMetadata.prototype.getNewmetadata = function() {
  return /** @type{!proto.WorkingGroupStatusMetadata} */ (
    jspb.Message.getWrapperField(this, proto.WorkingGroupStatusMetadata, 1, 1));
};


/**
 * @param {!proto.WorkingGroupStatusMetadata} value
 * @return {!proto.SetGroupMetadata} returns this
*/
proto.SetGroupMetadata.prototype.setNewmetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.SetGroupMetadata} returns this
 */
proto.SetGroupMetadata.prototype.clearNewmetadata = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SetGroupMetadata.prototype.hasNewmetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.AddUpcomingOpening.prototype.toObject = function(opt_includeInstance) {
  return proto.AddUpcomingOpening.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.AddUpcomingOpening} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AddUpcomingOpening.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.UpcomingOpeningMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.AddUpcomingOpening}
 */
proto.AddUpcomingOpening.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.AddUpcomingOpening;
  return proto.AddUpcomingOpening.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.AddUpcomingOpening} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.AddUpcomingOpening}
 */
proto.AddUpcomingOpening.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.UpcomingOpeningMetadata;
      reader.readMessage(value,proto.UpcomingOpeningMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.AddUpcomingOpening.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.AddUpcomingOpening.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.AddUpcomingOpening} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AddUpcomingOpening.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.UpcomingOpeningMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * required UpcomingOpeningMetadata metadata = 1;
 * @return {!proto.UpcomingOpeningMetadata}
 */
proto.AddUpcomingOpening.prototype.getMetadata = function() {
  return /** @type{!proto.UpcomingOpeningMetadata} */ (
    jspb.Message.getWrapperField(this, proto.UpcomingOpeningMetadata, 1, 1));
};


/**
 * @param {!proto.UpcomingOpeningMetadata} value
 * @return {!proto.AddUpcomingOpening} returns this
*/
proto.AddUpcomingOpening.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.AddUpcomingOpening} returns this
 */
proto.AddUpcomingOpening.prototype.clearMetadata = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.AddUpcomingOpening.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RemoveUpcomingOpening.prototype.toObject = function(opt_includeInstance) {
  return proto.RemoveUpcomingOpening.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RemoveUpcomingOpening} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RemoveUpcomingOpening.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RemoveUpcomingOpening}
 */
proto.RemoveUpcomingOpening.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RemoveUpcomingOpening;
  return proto.RemoveUpcomingOpening.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RemoveUpcomingOpening} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RemoveUpcomingOpening}
 */
proto.RemoveUpcomingOpening.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RemoveUpcomingOpening.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RemoveUpcomingOpening.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RemoveUpcomingOpening} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RemoveUpcomingOpening.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * required string id = 1;
 * @return {string}
 */
proto.RemoveUpcomingOpening.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.RemoveUpcomingOpening} returns this
 */
proto.RemoveUpcomingOpening.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.RemoveUpcomingOpening} returns this
 */
proto.RemoveUpcomingOpening.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.RemoveUpcomingOpening.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.WorkingGroupMetadataAction.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.WorkingGroupMetadataAction.ActionCase = {
  ACTION_NOT_SET: 0,
  SETGROUPMETADATA: 1,
  ADDUPCOMINGOPENING: 2,
  REMOVEUPCOMINGOPENING: 3
};

/**
 * @return {proto.WorkingGroupMetadataAction.ActionCase}
 */
proto.WorkingGroupMetadataAction.prototype.getActionCase = function() {
  return /** @type {proto.WorkingGroupMetadataAction.ActionCase} */(jspb.Message.computeOneofCase(this, proto.WorkingGroupMetadataAction.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.WorkingGroupMetadataAction.prototype.toObject = function(opt_includeInstance) {
  return proto.WorkingGroupMetadataAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.WorkingGroupMetadataAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.WorkingGroupMetadataAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    setgroupmetadata: (f = msg.getSetgroupmetadata()) && proto.SetGroupMetadata.toObject(includeInstance, f),
    addupcomingopening: (f = msg.getAddupcomingopening()) && proto.AddUpcomingOpening.toObject(includeInstance, f),
    removeupcomingopening: (f = msg.getRemoveupcomingopening()) && proto.RemoveUpcomingOpening.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.WorkingGroupMetadataAction}
 */
proto.WorkingGroupMetadataAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.WorkingGroupMetadataAction;
  return proto.WorkingGroupMetadataAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.WorkingGroupMetadataAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.WorkingGroupMetadataAction}
 */
proto.WorkingGroupMetadataAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.SetGroupMetadata;
      reader.readMessage(value,proto.SetGroupMetadata.deserializeBinaryFromReader);
      msg.setSetgroupmetadata(value);
      break;
    case 2:
      var value = new proto.AddUpcomingOpening;
      reader.readMessage(value,proto.AddUpcomingOpening.deserializeBinaryFromReader);
      msg.setAddupcomingopening(value);
      break;
    case 3:
      var value = new proto.RemoveUpcomingOpening;
      reader.readMessage(value,proto.RemoveUpcomingOpening.deserializeBinaryFromReader);
      msg.setRemoveupcomingopening(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.WorkingGroupMetadataAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.WorkingGroupMetadataAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.WorkingGroupMetadataAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.WorkingGroupMetadataAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSetgroupmetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.SetGroupMetadata.serializeBinaryToWriter
    );
  }
  f = message.getAddupcomingopening();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.AddUpcomingOpening.serializeBinaryToWriter
    );
  }
  f = message.getRemoveupcomingopening();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.RemoveUpcomingOpening.serializeBinaryToWriter
    );
  }
};


/**
 * optional SetGroupMetadata setGroupMetadata = 1;
 * @return {?proto.SetGroupMetadata}
 */
proto.WorkingGroupMetadataAction.prototype.getSetgroupmetadata = function() {
  return /** @type{?proto.SetGroupMetadata} */ (
    jspb.Message.getWrapperField(this, proto.SetGroupMetadata, 1));
};


/**
 * @param {?proto.SetGroupMetadata|undefined} value
 * @return {!proto.WorkingGroupMetadataAction} returns this
*/
proto.WorkingGroupMetadataAction.prototype.setSetgroupmetadata = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.WorkingGroupMetadataAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.WorkingGroupMetadataAction} returns this
 */
proto.WorkingGroupMetadataAction.prototype.clearSetgroupmetadata = function() {
  return this.setSetgroupmetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.WorkingGroupMetadataAction.prototype.hasSetgroupmetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional AddUpcomingOpening addUpcomingOpening = 2;
 * @return {?proto.AddUpcomingOpening}
 */
proto.WorkingGroupMetadataAction.prototype.getAddupcomingopening = function() {
  return /** @type{?proto.AddUpcomingOpening} */ (
    jspb.Message.getWrapperField(this, proto.AddUpcomingOpening, 2));
};


/**
 * @param {?proto.AddUpcomingOpening|undefined} value
 * @return {!proto.WorkingGroupMetadataAction} returns this
*/
proto.WorkingGroupMetadataAction.prototype.setAddupcomingopening = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.WorkingGroupMetadataAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.WorkingGroupMetadataAction} returns this
 */
proto.WorkingGroupMetadataAction.prototype.clearAddupcomingopening = function() {
  return this.setAddupcomingopening(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.WorkingGroupMetadataAction.prototype.hasAddupcomingopening = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RemoveUpcomingOpening removeUpcomingOpening = 3;
 * @return {?proto.RemoveUpcomingOpening}
 */
proto.WorkingGroupMetadataAction.prototype.getRemoveupcomingopening = function() {
  return /** @type{?proto.RemoveUpcomingOpening} */ (
    jspb.Message.getWrapperField(this, proto.RemoveUpcomingOpening, 3));
};


/**
 * @param {?proto.RemoveUpcomingOpening|undefined} value
 * @return {!proto.WorkingGroupMetadataAction} returns this
*/
proto.WorkingGroupMetadataAction.prototype.setRemoveupcomingopening = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.WorkingGroupMetadataAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.WorkingGroupMetadataAction} returns this
 */
proto.WorkingGroupMetadataAction.prototype.clearRemoveupcomingopening = function() {
  return this.setRemoveupcomingopening(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.WorkingGroupMetadataAction.prototype.hasRemoveupcomingopening = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto);
